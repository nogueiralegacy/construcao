# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      ARGS: "-tgoDzvO --delete"
      SOURCE: "construcao/target/construcao-1.0.jar"
      REMOTE_HOST: "157.230.84.81"
      REMOTE_USER: "root"
      TARGET: "/aplicacao"

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean package

  deploy:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: Copy files with SSH
        uses: easingthemes/ssh-deploy@main

      - name: Give execute permission to post-deploy.sh
        run: chmod +x .github/scripts/post-deploy.sh

      - name: Execute post-deploy script
        run: |
          .github/scripts/post-deploy.sh